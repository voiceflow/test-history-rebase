{
  "name": "@voiceflow/realtime",
  "version": "1.204.2",
  "dependencies": {
    "@aws-sdk/client-s3": "^3.181.0",
    "@liaoliaots/nestjs-redis": "9.0.5",
    "@logux/actions": "0.3.1",
    "@logux/core": "0.8.5",
    "@logux/server": "0.12.5",
    "@mikro-orm/core": "5.8.3",
    "@mikro-orm/nestjs": "5.2.0",
    "@nestjs/common": "9.4.3",
    "@nestjs/core": "9.4.3",
    "@nestjs/microservices": "9.4.3",
    "@nestjs/platform-express": "9.4.3",
    "@nestjs/swagger": "6.3.0",
    "@nestjs/terminus": "9.2.2",
    "@opentelemetry/api-metrics": "0.33.0",
    "@voiceflow/alexa-types": "2.14.12",
    "@voiceflow/api-sdk": "3.26.2",
    "@voiceflow/backend-utils": "4.8.5",
    "@voiceflow/base-types": "2.91.0",
    "@voiceflow/common": "8.2.1",
    "@voiceflow/exception": "1.4.0",
    "@voiceflow/fetch": "1.5.2",
    "@voiceflow/internal": "3.2.3",
    "@voiceflow/logger": "2.0.0",
    "@voiceflow/metrics": "1.4.1",
    "@voiceflow/nestjs-common": "2.35.2",
    "@voiceflow/nestjs-env": "1.5.3",
    "@voiceflow/nestjs-logux": "1.4.7",
    "@voiceflow/orm-designer": "2.0.0-5",
    "@voiceflow/platform-config": "workspace:*",
    "@voiceflow/realtime-sdk": "workspace:*",
    "@voiceflow/schema-types": "^1.56.2",
    "@voiceflow/sdk-auth": "^2.5.12",
    "@voiceflow/sdk-billing": "^1.15.67",
    "@voiceflow/sdk-identity": "^1.16.18",
    "@voiceflow/sdk-logux-designer": "2.0.0-6",
    "@voiceflow/slate-serializer": "1.5.5",
    "@voiceflow/socket-utils": "workspace:*",
    "axios": "1.4.0",
    "bidirectional-adapter": "1.2.1",
    "bson": "4.6.5",
    "dayjs": "^1.11.10",
    "dotenv": "16.0.3",
    "express-validator": "7.0.1",
    "hashids": "2.2.11",
    "ioredis": "5.3.2",
    "lodash": "4.17.21",
    "moize": "6.1.6",
    "mongodb": "3.5.7",
    "multer": "1.4.5-lts.1",
    "multer-s3": "3.0.1",
    "nestjs-pino": "3.3.0",
    "nestjs-zod": "2.3.3",
    "normal-store": "1.3.0",
    "polished": "4.2.2",
    "react-router": "5.3.4",
    "react-router-dom": "5.3.4",
    "reflect-metadata": "0.1.13",
    "rxjs": "7.8.1",
    "slate": "0.94.1",
    "socket.io": "3.1.2",
    "socket.io-adapter": "2.1.0",
    "socket.io-redis": "6.0.1",
    "ts-pattern": "^5.0.5",
    "type-fest": "4.2.0",
    "typescript-fsa": "3.0.0",
    "undici": "5.23.0",
    "unleash-client": "3.19.1",
    "utility-types": "3.10.0",
    "zod": "3.21.4"
  },
  "devDependencies": {
    "@nestjs/testing": "9.4.3",
    "@types/mongodb": "3.5.18",
    "@types/multer": "^1.4.7",
    "@types/multer-s3": "^3.0.0",
    "@types/node": "16.11.41",
    "tsx": "3.12.7"
  },
  "engines": {
    "node": ">=16"
  },
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "analyze:dependencies": "depcruise --exclude src/models.ts --validate -- src",
    "build": "yarn clean && yarn g:tsc --project tsconfig.build.json && yarn g:tsc-alias -p tsconfig.build.json",
    "clean": "yarn g:rimraf build",
    "dev": "tsx watch --inspect src/main.ts",
    "e2e": "yarn kill:e2e && NODE_ENV=e2e NODE_TLS_REJECT_UNAUTHORIZED=0 yarn start:base",
    "e2e:check-deps": "npx wait-on https://localhost:8003/health ",
    "e2e:check-deps-ci": "npx wait-on https://creator-api.test.e2e:8003/health",
    "e2e:ci": "./scripts/run_e2e_ci.sh",
    "gen-certs:e2e": "scripts/generate_e2e_certs.sh",
    "kill:e2e": "npx kill-port 8013 || true",
    "lint": "eslint \"**/*.{js,ts}\"",
    "lint:dockerfiles": "hadolint --ignore DL3018 ./Dockerfile",
    "lint:fix": "yarn lint --fix",
    "lint:quiet": "yarn lint --quiet",
    "lint:report": "yarn lint --format json -o sonar/report.json",
    "local": "vfcli mesh connect realtime",
    "local:e2e": "yarn kill:e2e && NODE_ENV=e2e NODE_TLS_REJECT_UNAUTHORIZED=0 yarn dev",
    "mesh:post": "exit 0",
    "mesh:pre": "exit 0",
    "start": "PORT=8013 CREATOR_API_ENDPOINT=https:// NODE_ENV=production yarn start:base",
    "start:base": "node --experimental-specifier-resolution=node --max-old-space-size=8192 build/main.js",
    "start:meshed": "NODE_ENV=local IS_MESHED=true yarn dev",
    "test": "yarn g:vitest run --coverage",
    "test:dependencies": "depcheck",
    "test:integration": "exit 0",
    "test:unit": "REPORTS_DIRECTORY=coverage/unit yarn g:vitest run .unit --silent --coverage",
    "types": "yarn g:tsc --project tsconfig.build.json --noEmit --skipLibCheck"
  },
  "dockerfile": "Dockerfile",
  "serviceName": "realtime",
  "type": "module"
}
